// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SignIn Component should render correctly in SignInComponent 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <SignIn
        authType=""
        changePassword={[Function]}
        cleanErrorMsg={[Function]}
        errorMessage=""
        forgetUser={[Function]}
        forgotPass={[Function]}
        initialValues={Object {}}
        loginStatus={0}
        resetPass={[Function]}
        resetReduxStore={[Function]}
        signIn={[Function]}
        signInNextStep={[Function]}
        signOut={[Function]}
        signUp={[Function]}
        store={
          Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
        verifyAttributes={[Function]}
      />,
      "value": null,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "authType": "",
        "changePassword": [Function],
        "cleanErrorMsg": [Function],
        "errorMessage": "",
        "forgetUser": [Function],
        "forgotPass": [Function],
        "initialValues": Object {},
        "loginStatus": 0,
        "resetPass": [Function],
        "resetReduxStore": [Function],
        "signIn": [Function],
        "signInNextStep": [Function],
        "signOut": [Function],
        "signUp": [Function],
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "verifyAttributes": [Function],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": Object {
      "$$typeof": Symbol(react.provider),
      "_context": Object {
        "$$typeof": Symbol(react.context),
        "Consumer": Object {
          "$$typeof": Symbol(react.context),
          "_calculateChangedBits": null,
          "_context": [Circular],
        },
        "Provider": [Circular],
        "_calculateChangedBits": null,
        "_currentRenderer": null,
        "_currentRenderer2": null,
        "_currentValue": null,
        "_currentValue2": null,
        "_threadCount": 0,
      },
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <SignIn
          authType=""
          changePassword={[Function]}
          cleanErrorMsg={[Function]}
          errorMessage=""
          forgetUser={[Function]}
          forgotPass={[Function]}
          initialValues={Object {}}
          loginStatus={0}
          resetPass={[Function]}
          resetReduxStore={[Function]}
          signIn={[Function]}
          signInNextStep={[Function]}
          signOut={[Function]}
          signUp={[Function]}
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
          verifyAttributes={[Function]}
        />,
        "value": null,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "authType": "",
          "changePassword": [Function],
          "cleanErrorMsg": [Function],
          "errorMessage": "",
          "forgetUser": [Function],
          "forgotPass": [Function],
          "initialValues": Object {},
          "loginStatus": 0,
          "resetPass": [Function],
          "resetReduxStore": [Function],
          "signIn": [Function],
          "signInNextStep": [Function],
          "signOut": [Function],
          "signUp": [Function],
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
          "verifyAttributes": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": Object {
        "$$typeof": Symbol(react.provider),
        "_context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": [Circular],
          },
          "Provider": [Circular],
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": null,
          "_currentValue2": null,
          "_threadCount": 0,
        },
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "disableLifecycleMethods": true,
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
